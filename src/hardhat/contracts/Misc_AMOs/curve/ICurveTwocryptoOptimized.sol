// SPDX-License-Identifier: GPL-2.0-or-later
pragma solidity >=0.8.0;

interface ICurveTwocryptoOptimized {
  function exchange ( uint256 i, uint256 j, uint256 dx, uint256 min_dy ) external returns ( uint256 );
  function exchange ( uint256 i, uint256 j, uint256 dx, uint256 min_dy, address receiver ) external returns ( uint256 );
  function exchange_received ( uint256 i, uint256 j, uint256 dx, uint256 min_dy ) external returns ( uint256 );
  function exchange_received ( uint256 i, uint256 j, uint256 dx, uint256 min_dy, address receiver ) external returns ( uint256 );
  function add_liquidity ( uint256[2] memory amounts, uint256 min_mint_amount ) external returns ( uint256 );
  function add_liquidity ( uint256[2] memory amounts, uint256 min_mint_amount, address receiver ) external returns ( uint256 );
  function remove_liquidity ( uint256 _amount, uint256[2] memory min_amounts ) external returns ( uint256[2] memory );
  function remove_liquidity ( uint256 _amount, uint256[2] memory min_amounts, address receiver ) external returns ( uint256[2] memory );
  function remove_liquidity_one_coin ( uint256 token_amount, uint256 i, uint256 min_amount ) external returns ( uint256 );
  function remove_liquidity_one_coin ( uint256 token_amount, uint256 i, uint256 min_amount, address receiver ) external returns ( uint256 );
  function transferFrom ( address _from, address _to, uint256 _value ) external returns ( bool );
  function transfer ( address _to, uint256 _value ) external returns ( bool );
  function approve ( address _spender, uint256 _value ) external returns ( bool );
  function permit ( address _owner, address _spender, uint256 _value, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s ) external returns ( bool );
  function fee_receiver (  ) external view returns ( address );
  function admin (  ) external view returns ( address );
  function calc_token_amount ( uint256[2] memory amounts, bool deposit ) external view returns ( uint256 );
  function get_dy ( uint256 i, uint256 j, uint256 dx ) external view returns ( uint256 );
  function get_dx ( uint256 i, uint256 j, uint256 dy ) external view returns ( uint256 );
  function lp_price (  ) external view returns ( uint256 );
  function get_virtual_price (  ) external view returns ( uint256 );
  function price_oracle (  ) external view returns ( uint256 );
  function xcp_oracle (  ) external view returns ( uint256 );
  function price_scale (  ) external view returns ( uint256 );
  function fee (  ) external view returns ( uint256 );
  function calc_withdraw_one_coin ( uint256 token_amount, uint256 i ) external view returns ( uint256 );
  function calc_token_fee ( uint256[2] memory amounts, uint256[2] memory xp ) external view returns ( uint256 );
  function A (  ) external view returns ( uint256 );
  function gamma (  ) external view returns ( uint256 );
  function mid_fee (  ) external view returns ( uint256 );
  function out_fee (  ) external view returns ( uint256 );
  function fee_gamma (  ) external view returns ( uint256 );
  function allowed_extra_profit (  ) external view returns ( uint256 );
  function adjustment_step (  ) external view returns ( uint256 );
  function ma_time (  ) external view returns ( uint256 );
  function precisions (  ) external view returns ( uint256[2] memory );
  function fee_calc ( uint256[2] memory xp ) external view returns ( uint256 );
  function DOMAIN_SEPARATOR (  ) external view returns ( bytes32 );
  function ramp_A_gamma ( uint256 future_A, uint256 future_gamma, uint256 future_time ) external;
  function stop_ramp_A_gamma (  ) external;
  function apply_new_parameters ( uint256 _new_mid_fee, uint256 _new_out_fee, uint256 _new_fee_gamma, uint256 _new_allowed_extra_profit, uint256 _new_adjustment_step, uint256 _new_ma_time, uint256 _new_xcp_ma_time ) external;
  function MATH (  ) external view returns ( address );
  function coins ( uint256 arg0 ) external view returns ( address );
  function factory (  ) external view returns ( address );
  function last_prices (  ) external view returns ( uint256 );
  function last_timestamp (  ) external view returns ( uint256 );
  function last_xcp (  ) external view returns ( uint256 );
  function xcp_ma_time (  ) external view returns ( uint256 );
  function initial_A_gamma (  ) external view returns ( uint256 );
  function initial_A_gamma_time (  ) external view returns ( uint256 );
  function future_A_gamma (  ) external view returns ( uint256 );
  function future_A_gamma_time (  ) external view returns ( uint256 );
  function balances ( uint256 arg0 ) external view returns ( uint256 );
  function D (  ) external view returns ( uint256 );
  function xcp_profit (  ) external view returns ( uint256 );
  function xcp_profit_a (  ) external view returns ( uint256 );
  function virtual_price (  ) external view returns ( uint256 );
  function packed_rebalancing_params (  ) external view returns ( uint256 );
  function packed_fee_params (  ) external view returns ( uint256 );
  function ADMIN_FEE (  ) external view returns ( uint256 );
  function name (  ) external view returns ( string memory );
  function symbol (  ) external view returns ( string memory );
  function decimals (  ) external view returns ( uint8 );
  function version (  ) external view returns ( string memory );
  function balanceOf ( address arg0 ) external view returns ( uint256 );
  function allowance ( address arg0, address arg1 ) external view returns ( uint256 );
  function totalSupply (  ) external view returns ( uint256 );
  function nonces ( address arg0 ) external view returns ( uint256 );
  function salt (  ) external view returns ( bytes32 );
}
